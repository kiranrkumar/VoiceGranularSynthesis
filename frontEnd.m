%% Control the behavior of the frontEnd.fig GUI.
%
%   Kiran Kumar | 17 May, 2016
%
%   Function signatures and headers were automatically generated by MATLAB
%       via the 'guide' GUI editor. Code within the callback and 
%       initialization functions was written by me.
%
function varargout = frontEnd(varargin)
% frontEnd MATLAB code for frontEnd.fig
%      frontEnd, by itself, creates a new frontEnd or raises the existing
%      singleton*.
%
%      H = frontEnd returns the handle to a new frontEnd or the handle to
%      the existing singleton*.
%
%      frontEnd('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in frontEnd.M with the given input arguments.
%
%      frontEnd('Property','Value',...) creates a new frontEnd or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before frontEnd_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to frontEnd_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help frontEnd

% Last Modified by GUIDE v2.5 17-May-2016 17:39:14

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @frontEnd_OpeningFcn, ...
                   'gui_OutputFcn',  @frontEnd_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before frontEnd is made visible.
function frontEnd_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to frontEnd (see VARARGIN)

%Initialize default values

%background
[x, fs] = audioread('Audio_Sources/Hi_Sad.wav');
x = mean(x, 2);
x = x / max(abs(x)); %normalize
len = length(x);
handles.x = x;
handles.fs = fs;
handles.dur = 5;
handles.grainSize = 18000;
handles.density = 50;
handles.grainSizeVar = 5000;
handles.offsetVar = 16500;
handles.volume = 0;
%Display the values as well
handles.lblLen.String = ['Num Samples:             ', num2str(len)];
handles.lblFs.String = ['Sampling Rate:            ', num2str(fs), ' Hz'];

%foreground
[xFgnd, fsFgnd] = audioread('Audio_Sources/Hi_Happy.wav');
xFgnd = mean(xFgnd,2);
xFgnd = xFgnd / max(abs(xFgnd));
lenFgnd = length(xFgnd);
handles.xFgnd = xFgnd;
handles.fsFgnd = fsFgnd;
handles.durFgnd = 5;
handles.fgndGrainSize = 7500;
handles.fgndDensity = 4;
handles.fgndGrainSizeVar = 7000;
handles.fgndOffsetVar = 16500;
handles.volumeFgnd = 0;
%Display the values as well
handles.lblFgndLen.String = ['Num Samples:             ', num2str(lenFgnd)];
handles.lblFgndFs.String = ['Sampling Rate:            ', num2str(fsFgnd), ' Hz'];

handles.outAudio = []; %output audio

% Choose default command line output for frontEnd
handles.output = hObject;
% Update handles structure
guidata(hObject, handles);

% UIWAIT makes frontEnd wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = frontEnd_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in btnGenerate.
function btnGenerate_Callback(hObject, eventdata, handles)
% hObject    handle to btnGenerate (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    
    %Background
    x = handles.x;
    fs = handles.fs;
    dur = handles.dur;
    grainSize = handles.grainSize;
    density = handles.density;
    grainSizeVar = handles.grainSizeVar;
    offsetVar = handles.offsetVar;
    y = granulate(x, fs, dur, grainSize, grainSizeVar, density, offsetVar);
    
    %Foreground
    xFgnd = handles.xFgnd;
    fsFgnd = handles.fsFgnd;
    durFgnd = handles.durFgnd;
    grainSizeFgnd = handles.fgndGrainSize;
    densityFgnd = handles.fgndDensity;
    grainSizeVarFgnd = handles.fgndGrainSizeVar;
    offsetVarFgnd = handles.fgndOffsetVar;
    yFgnd = granulate(xFgnd, fsFgnd, durFgnd, grainSizeFgnd, grainSizeVarFgnd, ...
        densityFgnd, offsetVarFgnd);
    
    maxLen = max( length(y), length(yFgnd) );
    
    %zero pad to set the two lengths equal to one another
    y(end+1 : maxLen) = 0;
    yFgnd(end+1 : maxLen) = 0;
    
    %Mix the two into a single audio vector based on slider levels
    yFgnd = yFgnd * handles.volumeFgnd;
    y = y * handles.volume;
    out = (y + yFgnd) / 2;
%     out = out / max(abs(out));
    out = [out, out];
    handles.outAudio = out;
    
    % Choose default command line output for frontEnd
    handles.output = hObject;
    % Update handles structure
    guidata(hObject, handles);
    
    sound(out, fs);


function txtSize_Callback(hObject, eventdata, handles)
% hObject    handle to txtSize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of txtSize as text
%        str2double(get(hObject,'String')) returns contents of txtSize as a double
    grainSize = round( str2double( get(hObject,'String') ) );
    handles.grainSize = grainSize;
    % Choose default command line output for frontEnd
    handles.output = hObject;
    % Update handles structure
    guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function txtSize_CreateFcn(hObject, eventdata, handles)
% hObject    handle to txtSize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function txtDens_Callback(hObject, eventdata, handles)
% hObject    handle to txtDens (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of txtDens as text
%        str2double(get(hObject,'String')) returns contents of txtDens as a double
    newDens = str2double(get(hObject, 'String'));
    handles.density = newDens;
    % Choose default command line output for frontEnd
    handles.output = hObject;
    % Update handles structure
    guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function txtDens_CreateFcn(hObject, eventdata, handles)
% hObject    handle to txtDens (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function txtSizeVar_Callback(hObject, eventdata, handles)
% hObject    handle to txtSizeVar (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of txtSizeVar as text
%        str2double(get(hObject,'String')) returns contents of txtSizeVar as a double
    newSizeVar = str2double(get(hObject, 'String'));
    handles.grainSizeVar = newSizeVar;
    % Choose default command line output for frontEnd
    handles.output = hObject;
    % Update handles structure
    guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function txtSizeVar_CreateFcn(hObject, eventdata, handles)
% hObject    handle to txtSizeVar (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function txtDur_Callback(hObject, eventdata, handles)
% hObject    handle to txtDur (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of txtDur as text
%        str2double(get(hObject,'String')) returns contents of txtDur as a double
    newDur = str2double(get(hObject, 'String'));
    handles.dur = newDur;
    % Choose default command line output for frontEnd
    handles.output = hObject;
    % Update handles structure
    guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function txtDur_CreateFcn(hObject, eventdata, handles)
% hObject    handle to txtDur (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in btnTest.
function btnTest_Callback(hObject, eventdata, handles)
% hObject    handle to btnTest (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    grainSize = handles.grainSize;
    dur = handles.dur;
    density = handles.density;
    grainSizeVar = handles.grainSizeVar;
    offsetVar = handles.offsetVar;
    fs = handles.fs;
    
    disp( ['Dur: ',num2str(dur), ' | Grn Size: ',num2str(grainSize),... 
           ' | Dens: ',num2str(density), ' | Grn Size Var: ',num2str(grainSizeVar),...
           ' | Offset Var: ',num2str(offsetVar),' | FS: ',num2str(fs)] );



function txtOffsetVar_Callback(hObject, eventdata, handles)
% hObject    handle to txtOffsetVar (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of txtOffsetVar as text
%        str2double(get(hObject,'String')) returns contents of txtOffsetVar as a double
    offsetVar = str2double(get(hObject, 'String'));
    handles.offsetVar = offsetVar;
    
    handles.output = hObject;
    guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function txtOffsetVar_CreateFcn(hObject, eventdata, handles)
% hObject    handle to txtOffsetVar (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in btnStop.
function btnStop_Callback(hObject, eventdata, handles)
% hObject    handle to btnStop (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    clear sound


% --- Executes on selection change in mnuAudio.
function mnuAudio_Callback(hObject, eventdata, handles)
% hObject    handle to mnuAudio (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns mnuAudio contents as cell array
%        contents{get(hObject,'Value')} returns selected item from mnuAudio
    root = 'Audio_Sources';
    contents = cellstr(get(hObject,'String'));
    myfile = contents{get(hObject,'Value')};
    [x,fs] = audioread(fullfile(root, myfile));
    x = mean(x,2);
    x = x / max(abs(x)); %normalize
    len = length(x);
    handles.x = x;
    handles.fs = fs;
    
    %Update the displays
    handles.lblLen.String = ['Num Samples:             ', num2str(len)];
    handles.lblFs.String = ['Sampling Rate:            ', num2str(fs), ' Hz'];
    
    handles.output = hObject;
    guidata(hObject, handles);
    


% --- Executes during object creation, after setting all properties.
function mnuAudio_CreateFcn(hObject, eventdata, handles)
% hObject    handle to mnuAudio (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function fgndTxtGrnSize_Callback(hObject, eventdata, handles)
% hObject    handle to fgndTxtGrnSize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of fgndTxtGrnSize as text
%        str2double(get(hObject,'String')) returns contents of fgndTxtGrnSize as a double
    grainSize = round( str2double( get(hObject,'String') ) );
    handles.fgndGrainSize = grainSize;
    % Choose default command line output for frontEnd
    handles.output = hObject;
    % Update handles structure
    guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function fgndTxtGrnSize_CreateFcn(hObject, eventdata, handles)
% hObject    handle to fgndTxtGrnSize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function fgndTxtDensity_Callback(hObject, eventdata, handles)
% hObject    handle to fgndTxtDensity (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of fgndTxtDensity as text
%        str2double(get(hObject,'String')) returns contents of fgndTxtDensity as a double
    newDens = str2double(get(hObject, 'String'));
    handles.fgndDensity = newDens;
    % Choose default command line output for frontEnd
    handles.output = hObject;
    % Update handles structure
    guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function fgndTxtDensity_CreateFcn(hObject, eventdata, handles)
% hObject    handle to fgndTxtDensity (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function fgndTxtSizeVar_Callback(hObject, eventdata, handles)
% hObject    handle to fgndTxtSizeVar (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of fgndTxtSizeVar as text
%        str2double(get(hObject,'String')) returns contents of fgndTxtSizeVar as a double
    newSizeVar = str2double(get(hObject, 'String'));
    handles.fgndGrainSizeVar = newSizeVar;
    % Choose default command line output for frontEnd
    handles.output = hObject;
    % Update handles structure
    guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function fgndTxtSizeVar_CreateFcn(hObject, eventdata, handles)
% hObject    handle to fgndTxtSizeVar (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function fgndTxtDur_Callback(hObject, eventdata, handles)
% hObject    handle to fgndTxtDur (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of fgndTxtDur as text
%        str2double(get(hObject,'String')) returns contents of fgndTxtDur as a double
    newDur = str2double(get(hObject, 'String'));
    handles.durFgnd = newDur;
    % Choose default command line output for frontEnd
    handles.output = hObject;
    % Update handles structure
    guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function fgndTxtDur_CreateFcn(hObject, eventdata, handles)
% hObject    handle to fgndTxtDur (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function fgndTxtOffsetVar_Callback(hObject, eventdata, handles)
% hObject    handle to fgndTxtOffsetVar (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of fgndTxtOffsetVar as text
%        str2double(get(hObject,'String')) returns contents of fgndTxtOffsetVar as a double
    offsetVar = str2double(get(hObject, 'String'));
    handles.fgndOffsetVar = offsetVar;
    
    handles.output = hObject;
    guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function fgndTxtOffsetVar_CreateFcn(hObject, eventdata, handles)
% hObject    handle to fgndTxtOffsetVar (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on selection change in fgndMnuAudio.
function fgndMnuAudio_Callback(hObject, eventdata, handles)
% hObject    handle to fgndMnuAudio (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns fgndMnuAudio contents as cell array
%        contents{get(hObject,'Value')} returns selected item from fgndMnuAudio
    root = 'Audio_Sources';
    contents = cellstr(get(hObject,'String'));
    myfile = contents{get(hObject,'Value')};
    [x,fs] = audioread(fullfile(root, myfile));
    x = mean(x,2);
    x = x / max(abs(x)); %normalize
    len = length(x);
    handles.xFgnd = x;
    handles.fsFgnd = fs;
    
    %Update the displays
    handles.lblFgndLen.String = ['Num Samples:             ', num2str(len)];
    handles.lblFgndFs.String = ['Sampling Rate:            ', num2str(fs), ' Hz'];
    
    handles.output = hObject;
    guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function fgndMnuAudio_CreateFcn(hObject, eventdata, handles)
% hObject    handle to fgndMnuAudio (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in btnRandomVals.
function btnRandomVals_Callback(hObject, eventdata, handles)
% hObject    handle to btnRandomVals (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    x = handles.x;
    len = length(x);
    grainSize = round( rand(1) * len ); %grain size can be up to the audio length
    offset = round( rand(1) * (len-1) ); %up to 1 less than the audio length
    sizeVar = round( rand(1) * (grainSize -1) ); %vary in size up to one less than the audio length
    density = round( rand(1) * 199 ) + 1;  %between 1 and 200 grains/second 
    
    %Update values
    handles.grainSize = grainSize;
    handles.density = density;
    handles.grainSizeVar = sizeVar;
    handles.offsetVar = offset;
    
    
    %Update displays
    handles.txtSize.String = grainSize;
    handles.txtDens.String = density;
    handles.txtSizeVar.String = sizeVar;
    handles.txtOffsetVar.String = offset;
    
    handles.output = hObject;
    guidata(hObject, handles);


% --- Executes on button press in btnFgndRandom.
function btnFgndRandom_Callback(hObject, eventdata, handles)
% hObject    handle to btnFgndRandom (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
    x = handles.xFgnd;
    len = length(x);
    grainSize = round( rand(1) * len ); %grain size can be up to the audio length
    offset = round( rand(1) * (len-1) ); %up to 1 less than the audio length
    sizeVar = round( rand(1) * (grainSize -1) ); %vary in size up to one less than the audio length
    density = round( rand(1) * 199 ) + 1;  %between 1 and 200 grains/second 
    
    %Update values
    handles.fgndGrainSize = grainSize;
    handles.fgndDensity = density;
    handles.fgndGrainSizeVar = sizeVar;
    handles.fgndOffsetVar = offset;
    
    
    %Update displays
    handles.fgndTxtGrnSize.String = grainSize;
    handles.fgndTxtDensity.String = density;
    handles.fgndTxtSizeVar.String = sizeVar;
    handles.fgndTxtOffsetVar.String = offset;
    
   
    handles.output = hObject;
    guidata(hObject, handles);


% --- Executes on button press in btnFgndPlaySample.
function btnFgndPlaySample_Callback(hObject, eventdata, handles)
% hObject    handle to btnFgndPlaySample (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
x = handles.xFgnd;
fs = handles.fsFgnd;
soundsc(x, fs);


% --- Executes on button press in btnPlaySample.
function btnPlaySample_Callback(hObject, eventdata, handles)
% hObject    handle to btnPlaySample (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
x = handles.x;
fs = handles.fs;
soundsc(x, fs);


% --- Executes on button press in btnSaveGrains.
function btnSaveGrains_Callback(hObject, eventdata, handles)
% hObject    handle to btnSaveGrains (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
out = handles.outAudio;
if (isempty(out))
    disp('No audio has been created. Play audio first, then click Save');
else
    disp('Saving Audio....');
    fs = handles.fs;
    filename = fullfile(pwd, 'Audio_Output', [datestr(datetime('now')),...
        '.wav']);
    audiowrite(filename, out, fs);
    disp('Done!');
end


% --- Executes on slider movement.
function sliderFgnd_Callback(hObject, eventdata, handles)
% hObject    handle to sliderFgnd (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider
    curVolume = get(hObject,'Value');
    handles.volumeFgnd = curVolume;
    handles.output = hObject;
    guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function sliderFgnd_CreateFcn(hObject, eventdata, handles)
% hObject    handle to sliderFgnd (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end


% --- Executes on slider movement.
function sliderVolume_Callback(hObject, eventdata, handles)
% hObject    handle to sliderVolume (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider
    curVolume = get(hObject,'Value');
    handles.volume = curVolume;
    handles.output = hObject;
    guidata(hObject, handles);
    


% --- Executes during object creation, after setting all properties.
function sliderVolume_CreateFcn(hObject, eventdata, handles)
% hObject    handle to sliderVolume (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end
